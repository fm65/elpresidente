@startuml

title __TEST's Class Diagram__\n

  namespace  java{
    namespace test {
      class test.Event {
          - description : String
          - eventChoices : ArrayList<EventChoice>
          + Event()
          + choose()
          + displayChoices()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.EventChoice {
          - description : String
          - eventChoiceEffectList : ArrayList<EventChoiceEffect>
          - relatedEventsList : ArrayList<Event>
          + EventChoice()
          + applyEffects()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.EventChoiceEffect {
          - actionType : String
          - affectedObjectName : String
          - unitNumberChange : int
          + EventChoiceEffect()
          + affectFaction()
          + affectFactor()
          + affectPartisans()
          - affectAgriculture()
          - affectFood()
          - affectIndustry()
          - affectTreasury()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.Faction {
          - isAlive : boolean
          - name : String
          - satisfaction : int
          - totalPartisans : int
          + Faction()
          + isAlive()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.LoadJSON {
          - filePath : String
          - parser : JSONParser
          + LoadJSON()
          + extractAll()
          + extractChoiceEffects()
          + extractEffectsActions()
          + extractEventChoices()
          + extractEvents()
          + extractFactions()
          + extractStartParameters()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.Main {
          {static} + main()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.ScenarioSelector {
          + ScenarioSelector()
          + displayScenarioNameStoryDifficulty()
          + listScenarios()
          + selectScenario()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.World {
          {static} + data : WorldData
          - filePath : String
          - scenarioName : String
          - yearNumber : int
          + World()
          + createData()
          + createDataWithJSON()
          + executeActions()
          {static} + waitForEnter()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.WorldActions {
          - seasons : String[]
          + WorldActions()
          + applyChoiceEffects()
          + callEvent()
          + endYear()
          + iterateSeasons()
          + iterateYears()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.WorldData {
          - agriculturePercentage : int
          - difficulty : String
          - events : ArrayList<Event>
          - factionsList : ArrayList<Faction>
          - foodUnits : int
          - globalPopulation : int
          - globalSatisfaction : double
          - industryPercentage : int
          - treasury : int
          + WorldData()
          + calculateGlobalPopulationWithUpdate()
          + calculateGlobalSatisfactionWithUpdate()
          + factionExists()
      }
    }
  }
  

  namespace  java{
    namespace test {
      class test.YearEnding {
          + YearEnding()
          + bribe()
          + bribeChoice()
          + foodMarket()
          + reviewAgriculture()
          + reviewIndustry()
          + updatePopulation()
          + yearReview()
          - bribeFaction()
      }
    }
  }
  

  test.EventChoiceEffect o-- test.WorldData : data
  test.LoadJSON o-- test.WorldData : data
  test.World o-- test.WorldActions : actions
  test.WorldActions o-- test.WorldData : data
  test.YearEnding o-- test.WorldData : data


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
